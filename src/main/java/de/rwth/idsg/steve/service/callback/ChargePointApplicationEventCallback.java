package de.rwth.idsg.steve.service.callback;

import de.rwth.idsg.steve.mq.message.ErrorResponse;
import de.rwth.idsg.steve.ocpp.ws.data.ErrorCode;
import de.rwth.idsg.steve.ocpp.ws.data.OcppJsonError;
import lombok.Getter;
import org.jetbrains.annotations.NotNull;
import org.springframework.context.ApplicationEventPublisher;

import static de.rwth.idsg.steve.utils.ValidationUtils.requireNotBlank;

/**
 * Callback for charger point tasks which publishes the response as Spring event.
 *
 * @author ralf.heese
 */
@Getter
public class ChargePointApplicationEventCallback {

    /** Publisher for raising an event within the Spring framework */
    private final ApplicationEventPublisher publisher;

    /** Globally unique identifier of the request generated by the origin of the request (e.g., ID of the cloud event) */
    private final String requestId;

    public ChargePointApplicationEventCallback(@NotNull ApplicationEventPublisher publisher, @NotNull String requestId) {
        this.publisher = publisher;
        this.requestId = requireNotBlank(requestId, "Non-blank request ID required");
    }

    public void success(String chargeBoxId, OcppJsonError error) {
        ErrorResponse.ErrorResponseBuilder<?, ?> builder = ErrorResponse.builder()
                                                                        .requestId(getRequestId())
                                                                        .chargePointId(chargeBoxId);
        if (error != null) {
            builder.code(error.getErrorCode())
                   .description(error.getErrorDescription())
                   .details(error.getErrorDetails());
        } else {
            builder.code(ErrorCode.GenericError);
        }

        getPublisher().publishEvent(builder.build());
    }

    public void failed(String chargeBoxId, Exception e) {
        ErrorResponse.ErrorResponseBuilder<?, ?> builder = ErrorResponse.builder()
                                                                        .requestId(getRequestId())
                                                                        .chargePointId(chargeBoxId)
                                                                        .code(ErrorCode.GenericError);
        if (e != null) {
            builder.description(e.getMessage());
        }

        getPublisher().publishEvent(builder.build());
    }
}
